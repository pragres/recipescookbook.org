<?php

/**
 * {$classname} Entity
 * 
 * Generated by Ramifip ORM Generator
 * 
 * @updated {/div.now:Y-m-d h:i:s/}
 * 
 */

#{\n}class {$classname}Entity extends rpEntity{
#?$false
class xEntity extends rpEntity{
	#$false?

	#[$fields]
	#{\n}{\t}var ${$name};
	#[/$fields]
	
	#[$fields]
	#{\n}{\t}public function set{$property_name}($value){
	#?$false
	public function setProperty($value){
		#$false?
		$this->{$name} = $value;
		#{?( '{$type}' == 'bool' || '{$type}' == 'boolean' )?}
		$value = $this->TABLE->somethingToStrbool($value);
		#{/?}
		$where = "";
		#[$primary_keys]
		$v = $this->{$value};
		if (is_string($v)) $v = "'$v'";
		$where .= "{$value} = $v";
		#!$_is_last
		$where .= " AND ";
		#$_is_last!
		#[/$primary_keys]
		if (is_string($value))	$value = "'".$value."'";
		return $this->TABLE->setBy($where, "{$name} = $value");
	}

	#{\n}{\t}public function get{$property_name}(){
	#?$false
	public function getProperty(){
		#$false?
		$keys = array();
		#[$primary_keys]
		$keys['{$value}'] = $this->{$value};
		#[/$primary_keys]
		
		$r = $this->TABLE->get($keys);
		$this->{$property_name} = $r->{$property_name}; 
		return $r->{$property_name}; 
	}
	#[/$fields]
	
	#[$foreign_keys]
	
	#{\n}{\t}public function [$fields]{$localproperty}[/$fields](){
	#?$false
	function localproperty(){
		#$false?
		#{\n}{\t}{\t}$col = new {$foreign_class}Collection(false,$this->TABLE->driver);
		$keys = array();
		#[$fields]
		$keys['{$foreign_key}'] = $this->{$localfield};
		#[/$fields]
		$r = $col->getItem($keys);
		return $r;
	}
	#[/$foreign_keys]
	
	#[$foreign_methods]
	#{\n}{\t}public function add{$rcn}($properties){
	#?$false
	public function addRcn($properties){
		#$false?
		#[$fks]
		#[$fields]
		$properties['{$localfield}'] = $this->{$foreign_key}; 
		#[/$fields]
		#[/$fks]
		#{\n}{\t}{\t}$obj = new {$rcn}($properties, true, false, null, $this->TABLE->driver);
		return $obj;
	}
	
	/**
	 * Get all foreign entities
	 * 
	 * @param array $params
	 * @return {$rcn}Collection
	 */
	#{\n}{\t}public function get{$rcn}Rows($params = array()){
	#?$false
	public function getRcnRows($params = array()){
		#$false?
		#{\n}{\t}{\t}$col = new {$rcn}Collection(false, $this->TABLE->driver);
		if (!isset($params["where"])) $params["where"] = "TRUE";
		$where = "";
		#[$fks]
		#[$fields]
		$v = $this->{$foreign_key};
		if ("$v"=="" || is_null($v)) return array();
		if (is_string($v)){
			$v = addslashes($v);
			$v = "'$v'";
		}
		$where .= "{$localfield} = $v";
		#!$_is_last
		$where .= " AND ";
		#$_is_last!
		#[/$fields]
		#[/$fks]
		
		$params["where"] = "({$where}) AND ({$params["where"]})";
		$col->loadItems($params);
		return $col;
	}
	
	/**
	 * Get first foreign entity
	 */
	#{\n}{\t}public function getFirst{$rcn}($params = array()){
	#?$false
	public function getFirst($params = array()){
		#$false?
		#{\n}{\t}{\t}$r = $this->get{$rcn}($params);
		return isset($r->collection[0])? $r->collection[0]:null;
	}
	#[/$foreign_methods]
	
	/**
	 * Save this entity
	 *
	 */
	public function save(){
		#[$fields]
		#{\n}{\t}{\t}$this->set{$property_name}($this->{$name});
		#[/$fields]
	}
	
	/**
	 * Load this entity
	 *
	 */
	public function load(){
		#[$fields]
		#{\n}{\t}{\t}$r = $this->get{$property_name}();
		#[/$fields]
	}
}

// End of file